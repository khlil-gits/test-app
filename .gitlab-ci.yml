stages:
  - build
  - test
  - security
  - push
  - deploy

variables:
  DOCKER_TLS_CERTDIR: "/certs"

# Stage 1: Build Docker Images
build-backend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "Building backend Docker image..."
    - cd server
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE/backend:latest .
    - docker images
  tags:
    - docker

build-frontend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "Building frontend Docker image..."
    - cd client
    - docker build -t $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE/frontend:latest .
    - docker images
  tags:
    - docker

# Stage 2: Run Tests
test-backend:
  stage: test
  image: node:18-alpine
  script:
    - echo "Running backend tests..."
    - cd server
    - npm ci
    - npm run lint || echo "Linting completed with warnings"
    - npm test || echo "Tests need to be implemented"
  tags:
    - docker

test-frontend:
  stage: test
  image: node:18-alpine
  script:
    - echo "Running frontend tests..."
    - cd client
    - npm ci
    - npm run lint || echo "Linting completed with warnings"
    - npm test || echo "Tests need to be implemented"
  tags:
    - docker

# Stage 3: Security Scan
security-scan:
  stage: security
  image: node:18-alpine
  script:
    - echo "Running security scans..."
    - cd server && npm audit --audit-level=high || echo "Security issues found in backend"
    - cd ../client && npm audit --audit-level=high || echo "Security issues found in frontend"
  tags:
    - docker

# Stage 4: Push Images to Registry
push-backend:
  stage: push
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "Pushing backend image to registry..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd server
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE/backend:latest .
    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/backend:latest
  only:
    - main
  tags:
    - docker

push-frontend:
  stage: push
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "Pushing frontend image to registry..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd client
    - docker build -t $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE/frontend:latest .
    - docker push $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/frontend:latest
  only:
    - main
  tags:
    - docker

# Stage 5: Deploy
deploy-app:
  stage: deploy
  image: alpine:latest
  script:
    - echo "Deploying application..."
    - echo "This is a placeholder for the deployment stage"
    # Add your deployment commands here
  only:
    - main
  tags:
    - docker
  environment:
    name: production
